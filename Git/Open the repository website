#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""

    # Execute initial checks.
    _check_dependencies "command=git | command=xdg-open; package=xdg-utils"
    _display_wait_box "2"

    input_files=$(_get_files "par_type=directory; par_max_items=20; par_get_pwd=true")

    _open_repository_website "$input_files"

    _display_result_box ""
}

_convert_git_to_web_url() {
    local git_url="$1"
    local web_url=""

    git_url=${git_url//@ssh\./@}

    if [[ "$git_url" =~ ^https:// ]]; then
        # HTTPS URL, replace `.git` if present
        web_url="${git_url%.git}"
    elif [[ "$git_url" =~ ^git@ ]]; then
        # SSH URL (e.g., git@github.com:user/repo.git)
        web_url=$(sed -E 's/^git@([^:]+):/https:\/\/\1\//;s/\.git$//' <<<"$git_url")
    elif [[ "$git_url" =~ ^git:// ]]; then
        # Git protocol URL (e.g., git://github.com/user/repo.git)
        web_url=$(sed -E 's/^git:\/\//https:\/\//;s/\.git$//' <<<"$git_url")
    elif [[ "$git_url" =~ ^ssh:// ]]; then
        # SSH URL (e.g., ssh://git@github.com/user/repo.git)
        web_url=$(sed -E 's/^ssh:\/\/git@([^/]+)\//https:\/\/\1\//;s/\.git$//' <<<"$git_url")
    else
        return 1
    fi

    echo "$web_url"
}

_open_repository_website() {
    local input_files=$1
    local input_file=""

    # Iterate over each input file (directory).
    for input_file in $input_files; do
        local git_url=""
        local web_url=""

        git_url=$(git -C "$input_file" remote get-url origin 2>/dev/null)
        _check_output "$?" "The directory '$input_file' is not a Git repository." "$input_file" "" || continue

        web_url=$(_convert_git_to_web_url "$git_url")

        if [[ -n "$web_url" ]]; then
            xdg-open "$web_url"
        else
            _log_write "Error: No remote URL found." "$input_file" "" ""
        fi
    done
}

_main "$@"
