#!/usr/bin/env bash

# Source the file 'scripts/common-functions'
# shellcheck disable=SC1090
source "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")" | sed 's|\(scripts\).*|\1/common-functions|')"

# Initial checks
_check_dependencies cmp || exit 1
INPUT_FILES=$(_get_files "$*" "text;application" "1" "" "") || exit 1
OUTPUT_DIR=$(_get_output_dir) || exit 1

_run_task() {
    local FILE="$1"
    local OUTPUT_DIR="$2"
    local STD_OUTPUT=""
    local EXIT_CODE=0
    local OUTPUT_TEMP_FILE=""

    OUTPUT_TEMP_FILE=$(mktemp)

    # Skip 'binary' files
    if file -bi "$FILE" | grep -q "binary"; then
        return
    fi

    # Run the main process
    STD_OUTPUT="$(expand --tabs=4 "$FILE" >"$OUTPUT_TEMP_FILE")"
    EXIT_CODE=$?
    _log_result_error "$FILE" "$STD_OUTPUT" "$OUTPUT_DIR" "$EXIT_CODE" "" || return

    # Check if the file is different, then move it to the output directory
    if ! cmp --silent "$FILE" "$OUTPUT_TEMP_FILE"; then
        OUTPUT_FILE="$OUTPUT_DIR/$FILE"
        _transfer_file "c" "$OUTPUT_TEMP_FILE" "$OUTPUT_FILE"
        chmod --reference="$FILE" "$OUTPUT_FILE"
        _log_result_error "$FILE" "$STD_OUTPUT" "$OUTPUT_DIR" "$EXIT_CODE" "$OUTPUT_FILE"
    fi

    # Remove temporary file
    rm -rf "$OUTPUT_TEMP_FILE"
}

_parallel_run "$INPUT_FILES"
_display_result "$OUTPUT_DIR"
