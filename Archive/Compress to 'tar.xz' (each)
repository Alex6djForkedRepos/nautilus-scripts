#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "
        command=tar |
        command=xz; pkg_manager=apt; package=xz-utils |
        command=xz; pkg_manager=dnf |
        command=xz; pkg_manager=pacman"
    _display_wait_box "2"
    input_files=$(_get_files "par_type=all")
    output_dir=$(_get_output_dir "par_use_same_dir=true")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Run the main process.
    output_file=$(_get_output_filename "$input_file" "$output_dir" "par_extension_opt=replace; par_extension=tar.xz")
    if [[ -d "$input_file" ]]; then
        cd -- "$input_file" || return 1
        std_output=$(XZ_OPT="-9" find . -printf "%P\n" | tar -cJf "$output_file" -T - 2>&1)
    else
        local input_file_relative=""
        input_file_relative=$(_text_remove_pwd "$input_file")
        # shellcheck disable=SC2001
        input_file_relative=$(sed "s|^\./||g" <<<$"$input_file_relative")
        std_output=$(XZ_OPT="-9" tar -cJf "$output_file" -- "$input_file_relative" 2>&1)
    fi
    _check_output "$?" "$std_output" "$input_file" "$output_file" || return 1
}

_main "$@"
