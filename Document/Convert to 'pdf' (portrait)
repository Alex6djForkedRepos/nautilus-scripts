#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies ""
    _display_wait_box
    input_files=$(_get_files "type:file, validate_conflict:true")
    output_dir=$(_get_output_dir "use_same_dir:false")

    # Check dependencies for each file extension.
    case $(_get_command_use "$input_file") in
    "convert") _check_dependencies "convert" ;;
    "inkscape") _check_dependencies "inkscape" ;;
    "latexmk") _check_dependencies "latexmk" ;;
    "libreoffice") _check_dependencies "libreoffice" ;;
    "pandoc") _check_dependencies "pandoc" ;;
    *) _check_dependencies "pandoc" ;;
    esac

    export -f _get_command_use

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    output_file=$(_get_output_filename "$input_file" "$output_dir" "extension_opt:replace, extension:pdf")

    # Run the main process.
    case $(_get_command_use "$input_file") in
    "convert")
        std_output=$(convert -- "$input_file" "$output_file" 2>&1)
        _check_output "$?" "$std_output" "$input_file" "$output_file" || return 1
        ;;
    "inkscape")
        std_output=$(inkscape --export-area-drawing --export-filename="$output_file" -- "$input_file" 2>&1)
        _check_output "$?" "$std_output" "$input_file" "$output_file" || return 1
        ;;
    "latexmk")
        std_output=$(pandoc --standalone -o "$output_file" -- "$input_file" 2>&1)
        _check_output "$?" "$std_output" "$input_file" "$output_file"
        ;;
    "libreoffice")
        # The 'libreoffice' does not support define the outputfile manually.
        local output_file_temp=""
        local temp_file=""

        output_file_temp=$(_get_output_filename "$input_file" "$TEMP_DIR_TASK" "extension_opt:replace, extension:pdf")

        # NOTE: Workaround to fix the bug 37531 in the 'libreoffice'
        # See the: https://bugs.documentfoundation.org/show_bug.cgi?id=37531
        temp_file="$(mktemp --tmpdir="$TEMP_DIR_TASK").bug37531"

        # The 'libreoffice' does not support ' -- ' in the command line.
        std_output=$(libreoffice --headless --convert-to "pdf" "-env:UserInstallation=file://$temp_file" --outdir "$TEMP_DIR_TASK" "$input_file" 2>&1)
        _check_output "$?" "$std_output" "$input_file" "$output_file_temp"

        # Remove the temporary file.
        rm -f -- "$temp_file"

        std_output=$(_move_file "rename" "$output_file_temp" "$output_file" 2>&1)
        _check_output "$?" "$std_output" "$input_file" ""
        ;;
    *)
        std_output=$(pandoc -V "header-includes:\usepackage[a4paper, margin=1.5cm]{geometry} \usepackage{newtxtext, newtxmath}" --standalone -o "$output_file" -- "$input_file" 2>&1)
        _check_output "$?" "$std_output" "$input_file" "$output_file"
        ;;
    esac
}

_get_command_use() {
    local _input_file=$1
    local file_mime=""
    local command_use=""

    # Get the mime type and define what command to use.
    file_mime=$(file --dereference --brief --mime-type -- "$_input_file")

    case "${file_mime,,}" in
    *"octet-stream"*) # Can not find from mime. So, use the extension.
        case "${_input_file,,}" in
        *.doc | *.docx) command_use="libreoffice" ;;
        *.xls | *.xlsx) command_use="libreoffice" ;;
        *.ppt | *.pptx) command_use="libreoffice" ;;
        *.odt | *.fodt) command_use="libreoffice" ;;
        *.ods | *.fods) command_use="libreoffice" ;;
        *.odp | *.fodp) command_use="libreoffice" ;;
        *.odg | *.fodg) command_use="libreoffice" ;;
        *.odf | *.fodf) command_use="libreoffice" ;;
        *.svg | *.svgz) command_use="inkscape" ;;
        *) command_use="pandoc" ;;
        esac
        ;;
    *"wordprocessingml.document"*) command_use="libreoffice" ;;   # docx
    *"presentationml.presentation"*) command_use="libreoffice" ;; # pptx
    *"spreadsheetml.sheet"*) command_use="libreoffice" ;;         # xlsx
    *"opendocument.text"*) command_use="libreoffice" ;;           # odt
    *"opendocument.presentation"*) command_use="libreoffice" ;;   # odp
    *"opendocument.spreadsheet"*) command_use="libreoffice" ;;    # ods
    *"opendocument.graphics"*) command_use="libreoffice" ;;       # odg
    *"opendocument.formula"*) command_use="libreoffice" ;;        # odf
    *"msword"*) command_use="libreoffice" ;;                      # doc
    *"ms-powerpoint"*) command_use="libreoffice" ;;               # ppt
    *"ms-excel"*) command_use="libreoffice" ;;                    # xls
    *"text/html"*) command_use="libreoffice" ;;                   # html
    *"text/rtf"*) command_use="libreoffice" ;;                    # rtf
    *"text/xml"*) command_use="libreoffice" ;;                    # fodt, fodp, fods...
    *"text/x-tex"*) command_use="latexmk" ;;                      # tex
    *"image/svg"*) command_use="inkscape" ;;                      # svg
    *"image/"*) command_use="convert" ;;
    *) command_use="pandoc" ;;
    esac

    printf "%s" "$command_use"
}

_main "$@"
