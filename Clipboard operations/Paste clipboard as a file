#!/usr/bin/env bash
# install_keyboard_shortcut=<Control><Alt>V

# Source the script '_common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/_common-functions.sh"

_main() {
    local output_dir=""

    # Execute initial checks.
    _check_dependencies_clipboard ""
    _display_wait_box "2"
    output_dir=$(_get_output_dir "par_use_same_dir=true")

    # Run the main process.
    _save_file_from_clipboard "$output_dir"

    _display_result_box "$output_dir"
}

_save_file_from_clipboard() {
    local output_dir=$1

    # Detect clipboard tool and list available types
    local clipboard_tool=""
    local file_type=""
    if [[ "${XDG_SESSION_TYPE:-}" == "wayland" ]]; then
        clipboard_tool="wl-paste"
        file_type=$($clipboard_tool --list-types 2>/dev/null)
    else
        clipboard_tool="xclip"
        file_type=$($clipboard_tool -selection clipboard -t TARGETS -o 2>/dev/null)
    fi

    # Strip charset info.
    # shellcheck disable=SC2001
    file_type=$(sed "s|;.*||" <<<"$file_type")

    # Map MIME types to file extensions.
    declare -A mime_map=(
        ["image/png"]="png"
        ["image/jpeg"]="jpg"
        ["image/webp"]="webp"
        ["image/bmp"]="bmp"
        ["application/pdf"]="pdf"
        ["text/html"]="html"
        ["text/plain"]="txt"
        ["text/uri-list"]="uri"
    )

    local ext=""
    local output_file=""
    local type_found="false"

    # Find first supported type.
    local mime=""
    for mime in "${!mime_map[@]}"; do
        if grep -q "$mime" <<<"$file_type"; then
            type_found="true"
            break
        fi
    done

    if [[ "$type_found" == "false" ]]; then
        _display_error_box "Clipboard content type not supported."
        return 1
    fi

    ext="${mime_map[$mime]}"
    output_file=$(_get_output_filename "Clipboard.${ext}" "$output_dir" "par_extension_opt=preserve")

    if [[ "$clipboard_tool" == "wl-paste" ]]; then
        $clipboard_tool --no-newline --type "$mime" >"$output_file" 2>/dev/null
    else
        $clipboard_tool -selection clipboard -t "$mime" -o >"$output_file" 2>/dev/null
    fi

    _check_output "$?" "" "" "$output_file" || return 1
}

_main "$@"
