#!/usr/bin/env bash
# install_keyboard_shortcut=<Control><Shift>H

# Source the script '.common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/.common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "rhash"
    _display_wait_box "2"
    input_files=$(_get_files "par_type=file; par_recursive=true")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"

    local std_output=""
    std_output=$(_storage_text_read_all)

    _display_text_box "$std_output"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local std_output=""
    local status="ðŸŸ¢"

    # Run the main process.
    std_output=$(rhash --printf="CRC32:\t\t%{crc32}\nMD5:\t\t%{md5}\nSHA-1:\t\t%h\nSHA-256:\t%{sha-256}\nSHA-512:\t%{sha-512}\nSHA3-256:\t%{sha3-256}\nSHA3-512:\t%{sha3-512}\nBLAKE2s:\t%{blake2s}\nBLAKE2b:\t%{blake2b}\n " -- "$input_file" 2>/dev/null)

    if [[ -z "$std_output" ]]; then
        status="ðŸ”´"
    fi

    # FORMAT THE OUTPUT:
    # Prepend the filename.
    std_output="$status File: \"$(_text_remove_pwd "$input_file")\""$'\n'"$std_output"

    _storage_text_write_ln "$std_output"
}

_main "$@"
