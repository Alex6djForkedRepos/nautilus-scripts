#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""
    output_dir=$(pwd)

    # Execute initial checks.
    if [ "$XDG_SESSION_TYPE" == "x11" ]; then
        _check_dependencies "command=git | command=xclip"
    elif [ "$XDG_SESSION_TYPE" == "wayland" ]; then
        _check_dependencies "command=git | command=wl-paste; package=wl-clipboard"
    else
        _display_error_box "Unknown session type!"
        _exit_script
    fi
    _display_wait_box "2"

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$(_get_urls_from_clipboard)" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local std_output=""

    cd "$output_dir" || return 1

    # Run the main process.
    std_output=$(git clone -q -- "$input_file" 2>&1)
    _check_output "$?" "$std_output" "$input_file" "" || return 1
}

_get_urls_from_clipboard() {
    local urls=""

    if [ "$XDG_SESSION_TYPE" == "x11" ]; then
        urls=$(xclip -quiet -selection clipboard -o)
    elif [ "$XDG_SESSION_TYPE" == "wayland" ]; then
        urls=$(wl-paste)
    fi
    urls=$(grep --only-matching --perl-regexp "((git|ssh|http(s)?)|(git@[\w\.]+))(.*)(\.git)" <<<"$urls")
    urls=$(sort -u <<<"$urls")

    if [[ -z "$urls" ]]; then
        _display_error_box "There are no valid Git URLs in the clipboard!"
        _exit_script
    fi

    _convert_text_to_filenames "$urls"
}

_main "$@"
